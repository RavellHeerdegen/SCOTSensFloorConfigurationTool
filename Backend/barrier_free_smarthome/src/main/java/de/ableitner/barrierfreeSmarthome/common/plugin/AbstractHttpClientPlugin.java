package de.ableitner.barrierfreeSmarthome.common.plugin;

import de.ableitner.barrierfreeSmarthome.common.IHttpClient;

/**
 * This class can be extended by other classes, which will be the entry point of
 * a plugin. It provides default functions / properties, which are often needed
 * by the plugins.
 * 
 * @author Tobias Ableitner
 *
 */
public abstract class AbstractHttpClientPlugin extends AbstractPlugin implements IPluginV1 {

	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// attributes
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	
	private IHttpClient httpClient;




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// constructors
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

	public AbstractHttpClientPlugin() {
		super();
		this.setHttpClient(null);
	}




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// getters and setters
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// abstract methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// override methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

	public boolean isHttpClientNeeded() {
		return true;
	}

	public IHttpClient getHttpClient() {
		return this.httpClient;
		}

	public void setHttpClient(IHttpClient httpClient) {
		this.httpClient = httpClient;
	}




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// public methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// protected methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// private methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// inner classes
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

}
